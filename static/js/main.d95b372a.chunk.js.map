{"version":3,"sources":["redux/cakes/cakeReducer.js","redux/cakes/cakeTypes.js","redux/iceCream/iceCreamReducer.js","redux/iceCream/iceCreamTypes.js","redux/user/userReducer.js","redux/user/userType.js","redux/rootReducer.js","redux/store.js","redux/cakes/cakeActions.js","redux/user/userAction.js","components/CakeContainer.js","components/HooksCakeContainer.js","components/IceCreamContainer.js","redux/iceCream/iceCreamAction.js","components/NewCakeContainer.js","components/ItemContainer.js","components/UserContainer.js","components/UserContainer1.js","App.js","serviceWorker.js","index.js"],"names":["initialState","numberOfCakes","cakeReducer","state","action","type","payload","initialStore","numberOfIceCreams","reducer","loading","users","error","rootReducer","combineReducers","cake","iceCream","iceCreamReducer","user","userReducer","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","buyCake","number","fetchUsers","dispatch","axios","get","then","d","data","map","x","name","catch","e","message","connect","props","className","onClick","HooksCakeContainer","useSelector","useDispatch","buyIceCream","useState","setNumber","value","onChange","target","ownProps","item","buyItem","i","key","userData","useEffect","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.d95b372a.chunk.js","sourcesContent":["import { BUY_CAKE } from \"./cakeTypes\";\r\n\r\nconst initialState = {\r\n  numberOfCakes: 10\r\n};\r\n\r\nconst cakeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case BUY_CAKE:\r\n      return {\r\n        ...state,\r\n        numberOfCakes: state.numberOfCakes - action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cakeReducer;\r\n","export const BUY_CAKE = \"BUY_CAKE\";\r\n","import { BUY_ICECREAM } from \"./iceCreamTypes\";\r\n\r\nconst initialStore = {\r\n  numberOfIceCreams: 20\r\n};\r\n\r\nconst reducer = (state = initialStore, action) => {\r\n  switch (action.type) {\r\n    case BUY_ICECREAM:\r\n      return {\r\n        ...state,\r\n        numberOfIceCreams: state.numberOfIceCreams - 1\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const BUY_ICECREAM = \"BUY_ICECREAM\";","import {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE\r\n} from \"./userType\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  users: [],\r\n  error: \"\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n        error: \"\"\r\n      };\r\n    case FETCH_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: [],\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\r\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\r\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\r\n","import { combineReducers } from \"redux\";\r\nimport cakeReducer from \"./cakes/cakeReducer\";\r\nimport iceCreamReducer from \"./iceCream/iceCreamReducer\";\r\nimport userReducer from \"./user/userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  cake: cakeReducer,\r\n  iceCream: iceCreamReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { logger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n","import { BUY_CAKE } from \"./cakeTypes\";\r\n\r\nexport const buyCake = (number = 1) => {\r\n  return {\r\n    type: BUY_CAKE,\r\n    payload: number\r\n  };\r\n};\r\n","import {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE\r\n} from \"./userType\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchUserRequest = () => {\r\n  return {\r\n    type: FETCH_USERS_REQUEST\r\n  };\r\n};\r\n\r\nexport const fetchUserSuccess = users => {\r\n  return {\r\n    type: FETCH_USERS_SUCCESS,\r\n    payload: users\r\n  };\r\n};\r\n\r\nexport const fetchUserFailure = error => {\r\n  return {\r\n    type: FETCH_USERS_FAILURE,\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const fetchUsers = () => {\r\n  return dispatch => {\r\n    dispatch(fetchUserRequest());\r\n\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(d => {\r\n        dispatch(fetchUserSuccess(d.data.map(x => x.name)));\r\n      })\r\n      .catch(e => {\r\n        dispatch(fetchUserFailure(e.message));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { buyCake } from \"../redux/index\";\r\n\r\nfunction CakeContainer(props) {\r\n  return (\r\n    <div>\r\n      <h2>Number of Cakes : {props.numberOfCakes}</h2>\r\n      <button className=\"btn btn-primary btn-sm\" onClick={props.buyCake}>Buy Cake</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    numberOfCakes: state.cake.numberOfCakes\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    buyCake: () => dispatch(buyCake())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer);\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { buyCake } from \"../redux\";\r\n\r\nfunction HooksCakeContainer() {\r\n  const state = useSelector(state => state.cake);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <h3>Number of Cakes - {state.numberOfCakes}</h3>\r\n      <button\r\n        className=\"btn btn-primary btn-sm\"\r\n        onClick={() => dispatch(buyCake())}\r\n      >\r\n        Buy Cakes\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HooksCakeContainer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { buyIceCream } from \"../redux/index\";\r\n\r\nfunction IceCreamContainer(props) {\r\n  return (\r\n    <div>\r\n      <h3>Number of IceCream - {props.numberOfIceCreams}</h3>\r\n      <button className=\"btn btn-primary btn-sm\" onClick={props.buyIceCream}>\r\n        Buy IceCream\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    numberOfIceCreams: state.iceCream.numberOfIceCreams\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    buyIceCream: () => dispatch(buyIceCream())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IceCreamContainer);\r\n","import { BUY_ICECREAM } from \"./iceCreamTypes\";\r\n\r\nexport const buyIceCream = () => {\r\n  return {\r\n    type: BUY_ICECREAM\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { buyCake } from \"../redux/index\";\r\n\r\nfunction NewCakeContainer(props) {\r\n  const [number, setNumber] = useState(1);\r\n  return (\r\n    <div>\r\n      <h2>Number of Cakes : {props.numberOfCakes}</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={number}\r\n        onChange={e => setNumber(e.target.value)}\r\n      ></input>\r\n      <button\r\n        className=\"btn btn-primary btn-sm\"\r\n        onClick={() => props.buyCake(number)}\r\n      >\r\n        Buy {number} Cake\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    numberOfCakes: state.cake.numberOfCakes\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    buyCake: number => dispatch(buyCake(number))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCakeContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { buyCake, buyIceCream } from \"../redux/index\";\r\n\r\nfunction ItemContainer(props) {\r\n  return (\r\n    <div>\r\n      <h2>Number of Items : {props.item}</h2>\r\n      <button className=\"btn btn-primary btn-sm\" onClick={props.buyItem}>\r\n        Buy Cake\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const itemState = ownProps.cake\r\n    ? state.cake.numberOfCakes\r\n    : state.iceCream.numberOfIceCreams;\r\n\r\n  return {\r\n    item: itemState\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const dispatchFunction = ownProps.cake\r\n    ? () => dispatch(buyCake())\r\n    : () => dispatch(buyIceCream());\r\n\r\n  return {\r\n    buyItem: dispatchFunction\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemContainer);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../redux\";\r\n\r\nfunction UserContainer(props) {\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-primary btn-sm\" onClick={props.fetchUsers}>\r\n        Get List of Users\r\n      </button>\r\n      <h4>List of Users</h4>\r\n      <ul className=\"list-group\">\r\n        {props.users.map((d, i) => (\r\n          <li className=\"list-group-item\" key={i}>\r\n            {d}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.user.users\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUsers: () => dispatch(fetchUsers())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../redux\";\r\n\r\nfunction UserContainer1({ userData, fetchUsers }) {\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return userData.loading ? (\r\n    <h4>Loading</h4>\r\n  ) : userData.error ? (\r\n    <h4> {userData.error}</h4>\r\n  ) : (\r\n    <div>\r\n      <h4>User List</h4>\r\n      <div>\r\n        {userData.users.map((d, i) => (\r\n          <div key={i}>{d}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUsers: () => dispatch(fetchUsers())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer1);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./App.css\";\nimport CakeContainer from \"./components/CakeContainer\";\nimport HooksCakeContainer from \"./components/HooksCakeContainer\";\nimport IceCreamContainer from \"./components/IceCreamContainer\";\nimport NewCakeContainer from \"./components/NewCakeContainer\";\nimport ItemContainer from \"./components/ItemContainer\";\nimport UserContainer from \"./components/UserContainer\";\nimport UserContainer1 from \"./components/UserContainer1\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container text-center\">\n        <div className=\"card card-body\">\n          <CakeContainer /> <hr />\n          <HooksCakeContainer /> <hr />\n          <IceCreamContainer /> <hr />\n          <NewCakeContainer />\n          <hr />\n          <ItemContainer cake />\n          <ItemContainer />\n          <hr />\n          <UserContainer />\n          <hr />\n          <UserContainer1 />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}